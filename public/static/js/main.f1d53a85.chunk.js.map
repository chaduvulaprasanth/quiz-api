{"version":3,"sources":["user/views/Header.jsx","user/views/Hero.jsx","user/views/Signup.jsx","user/views/Signin.jsx","user/views/Notfound.jsx","state/actions/user.actions.js","state/types.js","user/views/Profile.jsx","user/views/Quizsets.jsx","user/views/Home.jsx","user/views/Showquiz.jsx","user/views/Showmarks.jsx","user/views/App.js","admin/views/Header.jsx","admin/views/Hero.jsx","admin/views/Signup.jsx","admin/views/Signin.jsx","admin/views/Notfound.jsx","admin/views/Profile.jsx","state/actions/admin.actions.js","admin/views/Quizsets.jsx","admin/views/Home.jsx","admin/views/Create.jsx","admin/views/Showquiz.jsx","admin/views/Questionedit.jsx","admin/views/App.js","LandingPage.jsx","state/reducers/admin.reducer.js","state/reducers/user.reducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["Header","handleLogout","localStorage","removeItem","props","handleIslogged","PrivateNav","className","to","quizuserName","onClick","PublicNav","quizuserToken","this","React","Component","Hero","Signup","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","userName","state","userEmail","userPassword","userPicture","then","res","json","data","success","console","log","alert","history","push","handleChange","event","target","name","value","setState","htmlFor","type","placeholder","onChange","withRouter","Signin","email","message","setItem","token","Notfound","fetchUser","dispatch","Authorization","payload","user","Profile","src","alt","connect","store","userDetails","Quizsets","handleQuizset","questions","quizsetArr","quizsetName","map","question","concat","quizset","Set","Home","Showquiz","handleQuestions","quizname","match","params","filterqns","handleAns","_id","ans","parentElement","innerText","style","visibility","show","marks","answer","mark","totalmark","length","index","title","options","option","Showmarks","totalmarks","Intl","DateTimeFormat","hour","minute","month","day","year","format","Date","createdAt","App","islogged","exact","path","PrivateRoutes","PublicRoutes","quizAdminName","quizAdminToken","adminName","adminEmail","adminPassword","adminPicture","admin","questionsId","quizsets","Create","optionsarr","option1","option2","option3","option4","createdQuestion","handleDelete","id","Questionedit","updatedQuestion","LandingPage","href","intialState","combineReducers","action","marksId","reverse","createStore","reducer","applyMiddleware","next","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1d53a85.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  handleLogout = () => {\n    localStorage.removeItem('quizuserToken');\n    localStorage.removeItem('quizuserName');\n    this.props.handleIslogged(false);\n  };\n\n  PrivateNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to={`/users/${localStorage.quizuserName}`}>\n          Quiz\n        </NavLink>\n        <div>\n          <NavLink\n            className=\"nav-item\"\n            to={`/users/${localStorage.quizuserName}/marks`}\n          >\n            Marks\n          </NavLink>\n          <NavLink\n            onClick={this.handleLogout}\n            className=\"nav-item nav-item-btn\"\n            to=\"/\"\n          >\n            LOGOUT\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  PublicNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to=\"/users\">\n          USER\n        </NavLink>\n        <div>\n          <NavLink className=\"nav-item\" to=\"/users/signin\">\n            SIGN IN\n          </NavLink>\n          <NavLink className=\"nav-item nav-item-btn\" to=\"/users/signup\">\n            SIGN UP\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        <div className=\"header-wrapper\">\n          <nav className=\"header-nav\">\n            {localStorage.quizuserToken ? this.PrivateNav() : this.PublicNav()}\n          </nav>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Hero extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">Appear for quiz and test your IQ</p>\n            <NavLink className=\"hero-btn nav-item-btn\" to=\"/users/signin\">\n              Get Started\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper\">\n            <div>\n              <NavLink className=\"footer-items\" to=\"/\">\n                ABOUT ME\n              </NavLink>\n              <NavLink className=\"footer-items\" to=\"/\">\n                HELP\n              </NavLink>\n            </div>\n            <small className=\"footer-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Hero;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userPassword: '',\n      userPicture: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/v1/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName: this.state.userName,\n        userEmail: this.state.userEmail,\n        userPassword: this.state.userPassword,\n        userPicture: this.state.userPicture\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          console.log(data);\n          alert('successfully registered');\n          this.props.history.push('/users/signin');\n        } else {\n          alert('enter valid details');\n        }\n      });\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Choose a user name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"userName\"\n              placeholder=\"e.g: prasanth\"\n              value={this.state.userName}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.userEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.userPassword}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Add online url of profile picture\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"userPicture\"\n              placeholder=\"e.g: www.myprofilepic.com/picprasanth\"\n              value={this.state.userPicture}\n              onChange={this.handleChange}\n            />\n\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN UP\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Already have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signin\">\n                Sign in\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userEmail: '',\n      userPassword: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/v1/users/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userEmail: this.state.userEmail,\n        userPassword: this.state.userPassword\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.email) {\n          alert(data.message);\n        } else if (!data.success) {\n          alert(data.message);\n        } else if (data.success) {\n          alert('successfully loggedin');\n          localStorage.setItem('quizuserToken', data.token);\n          localStorage.setItem('quizuserName', data.userName);\n          this.props.handleIslogged(true);\n          this.props.history.push(`/users/${localStorage.quizuserName}`);\n        }\n      });\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.userEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.userPassword}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN IN\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Don't have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signup\">\n                Sign up\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React from 'react';\n\nclass Notfound extends React.Component {\n  render() {\n    return (\n      <>\n        {/* <img src=\"notfound.png\" alt=\"\" /> */}\n        {/* <p>not found</p> */}\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import { SHOW_USER, GET_QUESTIONS } from '../types';\n\nexport function showMarks(payload) {\n  return { type: SHOW_USER, payload };\n}\n\nexport function fetchUser() {\n  return dispatch => {\n    fetch('/api/v1/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(showMarks(data.user));\n      });\n  };\n}\n\nexport function getQuestions(payload) {\n  return {\n    type: GET_QUESTIONS,\n    payload\n  };\n}\n\nexport function fetchQuestions(quizsetname) {\n  return dispatch => {\n    fetch('/api/v1/questions')\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getQuestions(data.questions));\n      });\n  };\n}\n","export const GET_QUESTIONS = 'GET_QUESTIONS';\nexport const GET_ADMIN = 'GET_ADMIN';\nexport const SHOW_QUIZ = 'SHOW_QUIZ';\nexport const SHOW_USER = 'SHOW_USER';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../state/actions/user.actions';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: ''\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchUser());\n  }\n  render() {\n    let { user } = this.props;\n    return (\n      <div className=\"profile-section\">\n        <center>\n          <img className=\"profile-pic\" src={user.userPicture} alt=\"\" />\n          <p className=\"profile-name\">{user.userName}</p>\n        </center>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { user: store.user.userDetails };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nclass Quizsets extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: '',\n      quizsetArr: [],\n      quizsetName: []\n    };\n  }\n  componentDidMount() {\n    fetch('/api/v1/questions/')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ questions: data.questions });\n        this.state.questions.map(question =>\n          this.setState({\n            quizsetArr: this.state.quizsetArr.concat(question.quizset)\n          })\n        );\n        this.setState({ quizsetName: [...new Set(this.state.quizsetArr)] });\n      });\n  }\n\n  handleQuizset = () => {};\n  render() {\n    let { quizsetName } = this.state;\n\n    return (\n      <>\n        <div className=\"quizsets-list-wrapper\">\n          <div className=\"quizsets-list\">\n            {quizsetName &&\n              quizsetName.map(quizset => (\n                <NavLink\n                  className=\"quizset-text\"\n                  to={`/users/${localStorage.quizuserName}/quizsets/${quizset}`}\n                >\n                  {quizset}\n                </NavLink>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Quizsets;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Profile from './Profile';\nimport Quizsets from './Quizsets';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"home-section\">\n        <div className=\"home-wrapper\">\n          <Profile />\n          <Quizsets />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { fetchQuestions } from '../../state/actions/user.actions';\nimport { connect } from 'react-redux';\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: '',\n      filterqns: [],\n      marks: 0,\n      ans: false\n    };\n  }\n\n  handleQuestions = () => {\n    this.setState({ quizname: this.props.match.params.quizname });\n    this.props.dispatch(fetchQuestions());\n\n    fetch('/api/v1/questions')\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          console.log(data);\n          data.questions.map(question =>\n            question.quizset == this.state.quizname\n              ? this.setState({\n                  filterqns: this.state.filterqns.concat(question)\n                })\n              : ''\n          );\n        }\n      });\n  };\n  componentDidMount() {\n    this.handleQuestions();\n  }\n\n  handleAns = (event, _id, ans) => {\n    this.setState({ ans: true });\n    event.target.parentElement.parentElement.innerText = event.target.innerText;\n    event.target.parentElement.style.visibility = 'hidden';\n    this.setState({ show: true });\n    let { marks, filterqns } = this.state;\n    filterqns.map(question => {\n      if (question._id == _id) {\n        return question.answer == ans\n          ? this.setState({ marks: marks + 1 })\n          : '';\n      }\n    });\n  };\n\n  handleSubmit = () => {\n    fetch('/api/v1/user/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      },\n      body: JSON.stringify({\n        mark: this.state.marks,\n        totalmark: this.state.filterqns.length,\n        quizsetName: this.state.quizname\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.props.history.push(`/users/${localStorage.quizuserName}/marks`);\n        }\n      });\n  };\n\n  render() {\n    let { ans, quizname, filterqns, show } = this.state;\n    return (\n      <div className=\"quizlist-section\">\n        <div className=\"quizlist-heading-section\">\n          <p className=\"quizlist-heading\">{filterqns.length ? quizname : ''}</p>\n          <p\n            onClick={this.handleSubmit}\n            className={`${show ? 'quizlist-submit-btn' : ''} `}\n          >\n            {show ? 'SUBMIT' : ''}\n          </p>\n        </div>\n        {filterqns.length ? (\n          filterqns.map((question, index) => (\n            <div className=\"quiz-card-wrapper\">\n              <div>\n                <p className=\"question-no\">{index + 1}.</p>\n              </div>\n\n              <div className=\"question-card\">\n                <p className=\"question-title\">{question.title}</p>\n                <div\n                  className={`question-answers ${\n                    ans ? 'question-ans-selected' : ''\n                  }`}\n                >\n                  <div>\n                    {question.options.map(option => (\n                      <button\n                        onClick={event => {\n                          this.handleAns(event, question._id, option);\n                        }}\n                        className=\"question-answers-item\"\n                      >\n                        {option}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"quizlist-heading\">no question found</p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { filterqns: store.user.questions };\n}\n\nexport default connect(mapStateToProps)(withRouter(Showquiz));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../state/actions/user.actions';\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: ''\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchUser());\n  }\n  render() {\n    let { totalmarks } = this.props;\n    return (\n      <>\n        <div className=\"showmarks-section\">\n          {totalmarks.length ? (\n            <>\n              <p className=\"showmarks-heading\">Showing all test marks</p>\n              <table className=\"showmarks-table\">\n                <tr className=\"showmarks-table-th\">\n                  <th>So.No</th>\n                  <th>Quizset Name</th>\n                  <th>Total Mark</th>\n                  <th>Marks secured</th>\n                  <th>Appeared on</th>\n                </tr>\n                {totalmarks &&\n                  totalmarks.map((marks, index) => (\n                    <tr>\n                      <td className=\"showmarks-table-td\">{index + 1}</td>\n                      <td className=\"showmarks-table-td\">\n                        {marks.quizsetName}\n                      </td>\n                      <td className=\"showmarks-table-td\">{marks.totalmark}</td>\n                      <td className=\"showmarks-table-td\">{marks.mark}</td>\n\n                      <td className=\"showmarks-table-td\">\n                        {' '}\n                        {new Intl.DateTimeFormat('en-GB', {\n                          hour: '2-digit',\n                          minute: '2-digit',\n                          month: '2-digit',\n                          day: '2-digit',\n                          year: 'numeric'\n                        }).format(new Date(marks.createdAt))}\n                      </td>\n                    </tr>\n                  ))}\n              </table>\n            </>\n          ) : (\n            <p className=\"showmarks-heading\">No quiz test appeared</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { totalmarks: store.user.marks };\n}\n\nexport default connect(mapStateToProps)(Showmarks);\n","import React from 'react';\nimport '../stylesheet/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Hero from './Hero';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Notfound from './Notfound';\nimport Home from './Home';\nimport Showquiz from './Showquiz';\nimport Showmarks from './Showmarks';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      islogged: false\n    };\n  }\n\n  handleIslogged = value => {\n    this.setState({ islogged: value });\n  };\n  PublicRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/users\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Hero />\n          </Route>\n          <Route exact path=\"/users/signup\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signup />\n          </Route>\n          <Route exact path=\"/users/signin\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signin handleIslogged={this.handleIslogged} />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n  PrivateRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/users/:username\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Home />\n          </Route>\n          <Route exact path=\"/users/:username/marks\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showmarks />\n          </Route>\n          <Route exact path=\"/users/:username/quizsets/:quizname\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showquiz />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {localStorage.quizuserToken\n          ? this.PrivateRoutes()\n          : this.PublicRoutes()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  handleLogout = () => {\n    localStorage.removeItem('quizAdminToken');\n    localStorage.removeItem('quizAdminName');\n    this.props.handleIslogged(false);\n  };\n\n  PrivateNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to={`/admins/${localStorage.quizAdminName}`}>\n          Quiz\n        </NavLink>\n        <div>\n          <NavLink\n            className=\"nav-item\"\n            to={`/admins/${localStorage.quizAdminName}/quizsets/create`}\n          >\n            Create\n          </NavLink>\n          <NavLink\n            onClick={this.handleLogout}\n            className=\"nav-item nav-item-btn\"\n            to=\"/\"\n          >\n            LOGOUT\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  PublicNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to=\"/admins\">\n          ADMIN\n        </NavLink>\n        <div>\n          <NavLink className=\"nav-item\" to=\"/admins/signin\">\n            SIGN IN\n          </NavLink>\n          <NavLink className=\"nav-item nav-item-btn\" to=\"/admins/signup\">\n            SIGN UP\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        <div className=\"header-wrapper\">\n          <nav className=\"header-nav\">\n            {localStorage.quizAdminToken ? this.PrivateNav() : this.PublicNav()}\n          </nav>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Hero extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">\n              Create a quizset so that your users can appear for exam\n            </p>\n            <NavLink className=\"hero-btn nav-item-btn\" to=\"/admins/signin\">\n              Get Started\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper\">\n            <div>\n              <NavLink className=\"footer-items\" to=\"/\">\n                ABOUT ME\n              </NavLink>\n              <NavLink className=\"footer-items\" to=\"/\">\n                HELP\n              </NavLink>\n            </div>\n            <small className=\"footer-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Hero;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      adminName: '',\n      adminEmail: '',\n      adminPassword: '',\n      adminPicture: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/v1/admins/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        adminName: this.state.adminName,\n        adminEmail: this.state.adminEmail,\n        adminPassword: this.state.adminPassword,\n        adminPicture: this.state.adminPicture\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          console.log(data);\n          alert('successfully registered');\n          this.props.history.push('/admins/signin');\n        } else {\n          alert('enter valid details');\n        }\n      });\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Choose a admin name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"adminName\"\n              placeholder=\"e.g: prasanth\"\n              value={this.state.adminName}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"adminEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.adminEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"adminPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.adminPassword}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Add online url of profile picture\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"adminPicture\"\n              placeholder=\"e.g: www.myprofilepic.com/picprasanth\"\n              value={this.state.adminPicture}\n              onChange={this.handleChange}\n            />\n\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN UP\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Already have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signin\">\n                Sign in\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      adminEmail: '',\n      adminPassword: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/v1/admins/signin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        adminEmail: this.state.adminEmail,\n        adminPassword: this.state.adminPassword\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (data.email) {\n          alert(data.message);\n        } else if (!data.success) {\n          alert(data.message);\n        } else if (data.success) {\n          alert('successfully loggedin');\n          localStorage.setItem('quizAdminToken', data.token);\n          localStorage.setItem('quizAdminName', data.adminName);\n          this.props.handleIslogged(true);\n          this.props.history.push(`/admins/${localStorage.quizAdminName}`);\n        }\n      });\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"adminEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.adminEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"adminPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.adminPassword}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN IN\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Don't have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signup\">\n                Sign up\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React from 'react';\n\nclass Notfound extends React.Component {\n  render() {\n    return (\n      <>\n        {/* <img src=\"notfound.png\" alt=\"\" /> */}\n        {/* <p>not found</p> */}\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAdmin } from '../../state/actions/admin.actions';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchAdmin());\n  }\n  render() {\n    let { admin } = this.props;\n    return (\n      <div className=\"profile-section\">\n        <center>\n          <img className=\"profile-pic\" src={admin.adminPicture} alt=\"\" />\n          <p className=\"profile-name\">{admin.adminName}</p>\n        </center>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { admin: store.admin.admin };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import { GET_QUESTIONS, GET_ADMIN } from '../types';\n\nexport function getAdmin(payload) {\n  return { type: GET_ADMIN, payload };\n}\n\nexport function fetchAdmin() {\n  return dispatch => {\n    fetch('/api/v1/admin', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getAdmin(data.admin));\n      });\n  };\n}\n\nexport function getQuestions(payload) {\n  return {\n    type: GET_QUESTIONS,\n    payload\n  };\n}\n\nexport function fetchQuestions(quizsetname) {\n  return dispatch => {\n    fetch('/api/v1/questions')\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getQuestions(data.questions));\n      });\n  };\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAdmin } from '../../state/actions/admin.actions';\nclass Quizsets extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: '',\n      quizsetArr: [],\n      quizsetName: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/admin', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ questions: data.admin.questionsId });\n        this.state.questions.map(question =>\n          this.setState({\n            quizsetArr: this.state.quizsetArr.concat(question.quizset)\n          })\n        );\n        this.setState({ quizsetName: [...new Set(this.state.quizsetArr)] });\n      });\n  }\n\n  render() {\n    let { quizsetName } = this.state;\n    return (\n      <>\n        <div className=\"quizsets-list-wrapper\">\n          <div className=\"quizsets-list\">\n            {quizsetName.length ? (\n              quizsetName &&\n              quizsetName.map(quizset => (\n                <NavLink\n                  className=\"quizset-text\"\n                  to={`/admins/${localStorage.quizAdminName}/quizsets/${quizset}`}\n                >\n                  {quizset}\n                </NavLink>\n              ))\n            ) : (\n              <p className=\"quizlist-heading\">No quizsets found, create </p>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  console.log(store.admin);\n  return { quizsets: store.admin };\n}\n\nexport default connect(mapStateToProps)(Quizsets);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Profile from './Profile';\nimport Quizsets from './Quizsets';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"home-section\">\n        <div className=\"home-wrapper\">\n          <Profile />\n          <Quizsets />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass Create extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      options: [],\n      answer: '',\n      quizset: ''\n    };\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n    let { option1, option2, option3, option4 } = this.state;\n    let optionsarr = [option1, option2, option3, option4];\n    this.setState({ options: optionsarr });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/v1/questions/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        options: this.state.options,\n        answer: this.state.answer,\n        quizset: this.state.quizset\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.props.history.push(\n            `/admins/${localStorage.quizAdminName}/quizsets/${data.createdQuestion.quizset}`\n          );\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Question title\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"e.g: who is the founder of oyo rooms?\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n            {/* // options // */}\n            <div className=\"create-options\">\n              <label className=\"sign-label\" htmlFor=\"\">\n                Options\n              </label>\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option1\"\n                placeholder=\"Jef Bezos\"\n                value={this.state.option1}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option2\"\n                placeholder=\"Ritesh Agarwal\"\n                value={this.state.option2}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option3\"\n                placeholder=\"Varun Agarwal\"\n                value={this.state.option3}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option4\"\n                placeholder=\"Rakesh Chahar\"\n                value={this.state.option4}\n                onChange={this.handleChange}\n              />\n            </div>\n            {/* // options // */}\n\n            <label className=\"sign-label\" htmlFor=\"\">\n              Correct answer\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"answer\"\n              placeholder=\"Ritesh Agarwal\"\n              value={this.state.answer}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"quizset\"\n              placeholder=\"business\"\n              value={this.state.quizset}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Create);\n","import React from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { fetchQuestions } from '../../state/actions/admin.actions';\nimport { connect } from 'react-redux';\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: '',\n      filterqns: []\n    };\n  }\n\n  handleQuestions = () => {\n    this.setState({ quizname: this.props.match.params.quizname });\n    this.props.dispatch(fetchQuestions(this.props.match.params.quizname));\n  };\n  componentDidMount() {\n    this.handleQuestions();\n  }\n\n  handleDelete = id => {\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ show: true });\n          this.handleQuestions();\n        }\n      });\n  };\n\n  render() {\n    let { quizname } = this.state;\n    let { filterqns } = this.props;\n\n    return (\n      <div className=\"quizlist-section\">\n        <p className=\"quizlist-heading\">{quizname}</p>\n        {filterqns.map((question, index) =>\n          question.quizset == quizname ? (\n            <div className=\"quiz-card-wrapper\">\n              <div>\n                <p className=\"question-no\">{index + 1}.</p>\n                <p\n                  onClick={() => this.handleDelete(question._id)}\n                  className=\"question-no\"\n                >\n                  ❌\n                </p>\n                <NavLink\n                  to={`/admins/${localStorage.quizAdminName}/quizsets/${quizname}/${question.title}/${question._id}/edit/`}\n                  className=\"question-no\"\n                >\n                  ✏️\n                </NavLink>\n              </div>\n\n              <div className=\"question-card\">\n                <p className=\"question-title\">{question.title}</p>\n                <div className=\"question-answers\">\n                  {question.options.map(option => (\n                    <button className=\"question-answers-item\">{option}</button>\n                  ))}\n\n                  <button className=\"question-answers-item correct-answer\">\n                    {question.answer}\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            ''\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { filterqns: store.admin.questions };\n}\n\nexport default connect(mapStateToProps)(withRouter(Showquiz));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass Questionedit extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      options: [],\n      answer: '',\n      quizset: ''\n    };\n  }\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({\n            title: data.question.title,\n            option1: data.question.options[0],\n            option2: data.question.options[1],\n            option3: data.question.options[2],\n            option4: data.question.options[3],\n            answer: data.question.answer,\n            quizset: data.question.quizset\n          });\n        }\n      });\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n    let { option1, option2, option3, option4 } = this.state;\n    let optionsarr = [option1, option2, option3, option4];\n    this.setState({ options: optionsarr });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let id = this.props.match.params.id;\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        options: this.state.options,\n        answer: this.state.answer,\n        quizset: this.state.quizset\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.props.history.push(\n            `/admins/${localStorage.quizAdminName}/quizsets/${data.updatedQuestion.quizset}`\n          );\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Question title\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"e.g: who is the founder of oyo rooms?\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n            {/* // options // */}\n            <div className=\"create-options\">\n              <label className=\"sign-label\" htmlFor=\"\">\n                Options\n              </label>\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option1\"\n                placeholder=\"Jef Bezos\"\n                value={this.state.option1}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option2\"\n                placeholder=\"Ritesh Agarwal\"\n                value={this.state.option2}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option3\"\n                placeholder=\"Varun Agarwal\"\n                value={this.state.option3}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option4\"\n                placeholder=\"Rakesh Chahar\"\n                value={this.state.option4}\n                onChange={this.handleChange}\n              />\n            </div>\n            {/* // options // */}\n\n            <label className=\"sign-label\" htmlFor=\"\">\n              Correct answer\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"answer\"\n              placeholder=\"Ritesh Agarwal\"\n              value={this.state.answer}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"quizset\"\n              placeholder=\"business\"\n              value={this.state.quizset}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Questionedit);\n","import React from 'react';\nimport '../stylesheet/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Hero from './Hero';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Notfound from './Notfound';\nimport Home from './Home';\nimport Create from './Create';\nimport Showquiz from './Showquiz';\nimport Questionedit from './Questionedit';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      islogged: false\n    };\n  }\n\n  handleIslogged = value => {\n    this.setState({ islogged: value });\n  };\n  PublicRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/admins\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Hero />\n          </Route>\n          <Route exact path=\"/admins/signup\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signup />\n          </Route>\n          <Route exact path=\"/admins/signin\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signin handleIslogged={this.handleIslogged} />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n  PrivateRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/admins/:adminname\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Home />\n          </Route>\n          <Route exact path=\"/admins/:adminname/quizsets/create\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Create />\n          </Route>\n          <Route exact path=\"/admins/:adminname/quizsets/:quizname\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showquiz />\n          </Route>\n          <Route\n            exact\n            path=\"/admins/:adminname/quizsets/:quizname/:title/:id/edit\"\n          >\n            <Header handleIslogged={this.handleIslogged} />\n            <Questionedit />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {localStorage.quizAdminToken\n          ? this.PrivateRoutes()\n          : this.PublicRoutes()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LandingPage extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">Welcome to Quiz</p>\n\n            <NavLink\n              className=\"hero-btn nav-item-btn\"\n              to={\n                localStorage.quizAdminToken\n                  ? `/admins/${localStorage.quizAdminName}`\n                  : '/admins'\n              }\n            >\n              Get Started As Admin\n            </NavLink>\n            <NavLink\n              className=\"hero-btn nav-item-btn landing-page-btn\"\n              to={\n                localStorage.quizuserToken\n                  ? `/users/${localStorage.quizuserName}`\n                  : '/users'\n              }\n            >\n              Get Started As User\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper\">\n            <div>\n              <a\n                className=\"footer-items\"\n                href=\"https://github.com/chaduvulaprasanth\"\n                target=\"_blank\"\n              >\n                ABOUT ME\n              </a>\n              <a\n                className=\"footer-items\"\n                href=\"https://twitter.com/chaduvula98\"\n                target=\"_blank\"\n              >\n                HELP\n              </a>\n            </div>\n            <small className=\"footer-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LandingPage;\n","import { GET_QUESTIONS, GET_ADMIN } from '../types';\n\nlet intialState = {\n  admin: '',\n  questions: [],\n  filterqns: [],\n  quizsets: []\n};\n\nexport default function admin(state = intialState, action) {\n  switch (action.type) {\n    case GET_ADMIN:\n      return {\n        ...state,\n        admin: action.payload,\n        quizsets: action.payload.questionsId.map(question => [\n          state.quizsets.concat(question.quizset)\n        ])\n      };\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload\n      };\n    default:\n      return { ...state };\n  }\n}\n","import { SHOW_USER, GET_QUESTIONS } from '../types';\n\nlet intialState = {\n  userDetails: '',\n  marks: '',\n  questions: []\n};\n\nexport default function user(state = intialState, action) {\n  switch (action.type) {\n    case SHOW_USER:\n      return {\n        ...state,\n        userDetails: action.payload,\n        marks: action.payload.marksId.reverse()\n      };\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload\n      };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport admin from './admin.reducer';\nimport user from './user.reducer';\n\nexport default combineReducers({ admin, user });\n","import { createStore, applyMiddleware } from 'redux';\nimport admin from './reducers/admin.reducer';\nimport reducer from './reducers/index';\nlet createthunk = store => next => action => {\n  if (typeof action === 'function') {\n    return action(store.dispatch);\n  }\n\n  return next(action);\n};\n\nconst store = createStore(reducer, applyMiddleware(createthunk));\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport User from './user/views/App';\nimport Admin from './admin/views/App';\nimport LandingPage from './LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nfunction App() {\n  return (\n    <>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n    </>\n  );\n}\n\nrender(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n      <Admin />\n      <User />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}