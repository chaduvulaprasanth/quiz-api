{"version":3,"sources":["user/views/Header.jsx","user/views/Hero.jsx","user/views/Signup.jsx","user/views/Signin.jsx","user/views/Notfound.jsx","state/actions/user.actions.js","state/types.js","user/views/Profile.jsx","user/views/Quizsets.jsx","user/views/Home.jsx","user/views/Showquiz.jsx","user/views/Showmarks.jsx","user/views/App.js","admin/views/Header.jsx","admin/views/Hero.jsx","admin/views/Signup.jsx","admin/views/Signin.jsx","admin/views/Notfound.jsx","state/actions/admin.actions.js","admin/views/Profile.jsx","admin/views/Quizsets.jsx","admin/views/Home.jsx","admin/views/Showquiz.jsx","admin/views/EditQuestion.jsx","admin/views/CreateQuizset.jsx","admin/views/EditQuizset.jsx","admin/views/AddQuestion.jsx","admin/views/App.js","LandingPage.jsx","state/reducers/admin.reducer.js","state/reducers/user.reducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["Header","handleLogout","localStorage","removeItem","props","handleIslogged","PrivateNav","className","to","quizuserName","onClick","PublicNav","quizuserToken","this","React","Component","Hero","Signup","handleSubmit","e","preventDefault","validator","isEmail","state","userEmail","fetch","method","headers","body","JSON","stringify","userName","userPassword","userPicture","then","res","json","data","success","alert","history","push","handleChange","event","target","name","value","setState","htmlFor","type","placeholder","onChange","withRouter","Signin","email","message","setItem","token","Notfound","fetchUser","dispatch","Authorization","payload","user","Profile","isLoading","src","alt","connect","store","userDetails","Quizsets","quizsets","length","map","quizset","quizsetName","_id","Home","Showquiz","handleAns","selectedOption","parentElement","innerText","style","visibility","attemptedQus","concat","Id","questions","quizsetId","match","params","id","questionsId","question","index","title","option1","option2","option3","option4","Showmarks","totalmarks","marks","totalmark","mark","Intl","DateTimeFormat","hour","minute","month","day","year","format","Date","createdAt","App","islogged","exact","path","PrivateRoutes","PublicRoutes","quizAdminName","quizAdminToken","adminEmail","adminName","adminPassword","adminPicture","fetchAdmin","admin","adminDetails","handleDelete","handleQuestions","show","quizname","filterqns","answer","EditQuestion","CreateQuizset","EditQuizset","AddQuestion","LandingPage","href","intialState","combineReducers","action","quizsetsId","marksId","reverse","createStore","reducer","applyMiddleware","next","render","document","getElementById"],"mappings":"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","file":"static/js/main.c707dccb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  handleLogout = () => {\n    localStorage.removeItem('quizuserToken');\n    localStorage.removeItem('quizuserName');\n    this.props.handleIslogged(false);\n  };\n\n  PrivateNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to={`/users/${localStorage.quizuserName}`}>\n          Quiz\n        </NavLink>\n        <div>\n          <NavLink\n            className=\"nav-item\"\n            to={`/users/${localStorage.quizuserName}/marks`}\n          >\n            Marks\n          </NavLink>\n          <NavLink\n            onClick={this.handleLogout}\n            className=\"nav-item nav-item-btn\"\n            to=\"/\"\n          >\n            LOGOUT\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  PublicNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to=\"/users\">\n          USER\n        </NavLink>\n        <div>\n          <NavLink className=\"nav-item\" to=\"/users/signin\">\n            SIGN IN\n          </NavLink>\n          <NavLink className=\"nav-item nav-item-btn\" to=\"/users/signup\">\n            SIGN UP\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        <div className=\"header-wrapper\">\n          <nav className=\"header-nav\">\n            {localStorage.quizuserToken ? this.PrivateNav() : this.PublicNav()}\n          </nav>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Hero extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">Appear for quiz and test your IQ</p>\n            <NavLink className=\"hero-btn nav-item-btn\" to=\"/users/signin\">\n              Get Started\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper rfooter-wrapper\">\n            <div className=\"rfooter-wrapper-items\">\n              <NavLink className=\"footer-items rfooter-items\" to=\"/\">\n                ABOUT ME\n              </NavLink>\n              <NavLink className=\"footer-items rfooter-items\" to=\"/\">\n                HELP\n              </NavLink>\n            </div>\n            <small className=\"footer-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Hero;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport validator from 'validator';\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      userEmail: '',\n      userPassword: '',\n      userPicture: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (validator.isEmail(this.state.userEmail)) {\n      fetch('/api/v1/users/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName: this.state.userName,\n          userEmail: this.state.userEmail,\n          userPassword: this.state.userPassword,\n          userPicture: this.state.userPicture\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            alert('successfully registered');\n            this.props.history.push('/users/signin');\n          } else {\n            alert('enter valid details');\n          }\n        });\n    } else {\n      alert('enter valid details');\n    }\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Choose a user name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"userName\"\n              placeholder=\"e.g: prasanth\"\n              value={this.state.userName}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.userEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.userPassword}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Add online url of profile picture\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"userPicture\"\n              placeholder=\"e.g: www.myprofilepic.com/picprasanth\"\n              value={this.state.userPicture}\n              onChange={this.handleChange}\n            />\n\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN UP\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Already have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signin\">\n                Sign in\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport validator from 'validator';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userEmail: '',\n      userPassword: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (validator.isEmail(this.state.userEmail)) {\n      fetch('/api/v1/users/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userEmail: this.state.userEmail,\n          userPassword: this.state.userPassword\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.email) {\n            alert(data.message);\n          } else if (!data.success) {\n            alert(data.message);\n          } else if (data.success) {\n            alert('successfully loggedin');\n            localStorage.setItem('quizuserToken', data.token);\n            localStorage.setItem('quizuserName', data.userName);\n            this.props.handleIslogged(true);\n            this.props.history.push(`/users/${localStorage.quizuserName}`);\n          }\n        });\n    } else {\n      alert('enter valid details');\n    }\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"userEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.userEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"userPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.userPassword}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN IN\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Don't have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signup\">\n                Sign up\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React from 'react';\n\nclass Notfound extends React.Component {\n  render() {\n    return (\n      <>\n        {/* <img src=\"notfound.png\" alt=\"\" /> */}\n        {/* <p>not found</p> */}\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import {\n  SHOW_USER,\n  GET_QUESTIONS,\n  GET_ALLQUIZSETS,\n  GET_QUIZSET\n} from '../types';\n\nexport function showMarks(payload) {\n  return { type: SHOW_USER, payload };\n}\n\nexport function fetchUser() {\n  return dispatch => {\n    fetch('/api/v1/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(showMarks(data.user));\n      });\n  };\n}\n\nexport function getQuestions(payload) {\n  return {\n    type: GET_QUESTIONS,\n    payload\n  };\n}\n\nexport function fetchQuestions(quizsetname) {\n  return dispatch => {\n    fetch('/api/v1/questions')\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getQuestions(data.questions));\n      });\n  };\n}\n\nexport function getAllquizsets(payload) {\n  return {\n    type: GET_ALLQUIZSETS,\n    payload\n  };\n}\n\nexport function fetchAllquizsets() {\n  return dispatch => {\n    fetch('/api/v1/user/quizsets', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          dispatch(getAllquizsets(data.quizsets));\n        }\n      });\n  };\n}\n\nexport function getQuizset(payload) {\n  return {\n    type: GET_QUIZSET,\n    payload\n  };\n}\n\nexport function fetchQuizset(quizsetId) {\n  return dispatch => {\n    fetch(`/api/v1/user/quizsets/${quizsetId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getQuizset(data.quizset));\n      });\n  };\n}\n","export const GET_QUESTIONS = 'GET_QUESTIONS';\nexport const GET_ADMIN = 'GET_ADMIN';\nexport const SHOW_QUIZ = 'SHOW_QUIZ';\nexport const SHOW_USER = 'SHOW_USER';\nexport const GET_QUIZSET = 'GET_QUIZSET';\nexport const GET_ALLQUIZSETS = 'GET_ALLQUIZSETS';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../state/actions/user.actions';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchUser());\n  }\n  render() {\n    let { isLoading, user } = this.props;\n    return (\n      <div className=\"profile-section\">\n        <center>\n          {isLoading ? (\n            <p className=\"loader rloader\"></p>\n          ) : (\n            <>\n              <img className=\"profile-pic\" src={user.userPicture} alt=\"\" />\n              <p className=\"profile-name\">{user.userName}</p>\n            </>\n          )}\n        </center>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.user.isLoading, user: store.user.userDetails };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAllquizsets } from '../../state/actions/user.actions';\nclass Quizsets extends React.Component {\n  constructor() {\n    super();\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchAllquizsets());\n  }\n\n  render() {\n    let { isLoading, quizsets } = this.props;\n\n    return (\n      <>\n        <div className=\"quizsets-list-wrapper rquizsets-list-wrapper\">\n          {isLoading ? (\n            <p className=\"loader rloader\"></p>\n          ) : (\n            <>\n              {quizsets && quizsets.length ? (\n                <div className=\"quizsets-list\">\n                  {quizsets &&\n                    quizsets.map(quizset => (\n                      <NavLink\n                        className=\"quizset-text\"\n                        to={`/users/${localStorage.quizuserName}/quizsets/${quizset.quizsetName}/${quizset._id}`}\n                      >\n                        {quizset.quizsetName}\n                      </NavLink>\n                    ))}\n                </div>\n              ) : (\n                <p className=\"quizlist-quizsetname\">No quizsets found</p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.user.isLoading, quizsets: store.user.quizsets };\n}\n\nexport default connect(mapStateToProps)(Quizsets);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Profile from './Profile';\nimport Quizsets from './Quizsets';\nimport { connect } from 'react-redux';\nimport { fetchUser, fetchAllquizsets } from '../../state/actions/user.actions';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"home-section\">\n        <div className=\"home-wrapper rhome-wrapper\">\n          <Profile />\n          <Quizsets />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Home);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { fetchQuestions, fetchQuizset } from '../../state/actions/user.actions';\nimport { connect } from 'react-redux';\n\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      attemptedQus: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchQuizset(this.props.match.params.id));\n  }\n\n  handleAns = (event, _id, selectedOption) => {\n    event.target.parentElement.parentElement.innerText = event.target.innerText;\n    event.target.parentElement.style.visibility = 'hidden';\n    this.setState({\n      attemptedQus: this.state.attemptedQus.concat({\n        Id: _id,\n        selectedOption\n      })\n    });\n  };\n\n  handleSubmit = event => {\n    fetch(`/api/v1/user/quizsets/${this.props.questions._id}/submit`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizuserToken\n      },\n      body: JSON.stringify({\n        attemptedQus: this.state.attemptedQus\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.props.history.push(`/users/${localStorage.quizuserName}/marks`);\n        }\n      });\n  };\n\n  render() {\n    let { isLoading, questions } = this.props;\n    return (\n      <>\n        {isLoading ? (\n          <p className=\"loader rloader\"></p>\n        ) : (\n          <div className=\"quizlist-section\">\n            {questions && questions.questionsId.length ? (\n              <>\n                <div className=\"quizlist-heading-section\">\n                  <p className=\"quizlist-heading\">\n                    {questions && questions.quizsetName}\n                  </p>\n                  <p\n                    onClick={this.handleSubmit}\n                    className=\"quizlist-submit-btn\"\n                  >\n                    SUBMIT\n                  </p>\n                </div>\n                {questions &&\n                  questions.questionsId.map((question, index) => (\n                    <div className=\"quiz-card-wrapper\">\n                      <div>\n                        <p className=\"question-no\">{index + 1}.</p>\n                      </div>\n\n                      <div className=\"question-card\">\n                        <p className=\"question-title\">{question.title}</p>\n                        <div\n                          className={`question-answers\n\n                `}\n                        >\n                          <div>\n                            <button\n                              onClick={event => {\n                                this.handleAns(\n                                  event,\n                                  question._id,\n                                  question.option1\n                                );\n                              }}\n                              className=\"question-answers-item rquestion-answers-item \"\n                            >\n                              {question.option1}\n                            </button>\n                            <button\n                              onClick={event => {\n                                this.handleAns(\n                                  event,\n                                  question._id,\n                                  question.option2\n                                );\n                              }}\n                              className=\"question-answers-item rquestion-answers-item \"\n                            >\n                              {question.option2}\n                            </button>\n                            <button\n                              onClick={event => {\n                                this.handleAns(\n                                  event,\n                                  question._id,\n                                  question.option3\n                                );\n                              }}\n                              className=\"question-answers-item rquestion-answers-item \"\n                            >\n                              {question.option3}\n                            </button>\n                            <button\n                              onClick={event => {\n                                this.handleAns(\n                                  event,\n                                  question._id,\n                                  question.option4\n                                );\n                              }}\n                              className=\"question-answers-item rquestion-answers-item \"\n                            >\n                              {question.option4}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </>\n            ) : (\n              <p className=\"quizlist-quizsetname\">No questions found</p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.user.isLoading, questions: store.user.questions };\n}\n\nexport default connect(mapStateToProps)(withRouter(Showquiz));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../state/actions/user.actions';\nclass Showmarks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalmarks: ''\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchUser());\n  }\n  render() {\n    let { isLoading, totalmarks } = this.props;\n    return (\n      <>\n        <div className=\"showmarks-section\">\n          {isLoading ? (\n            <p className=\"loader rloader\"></p>\n          ) : (\n            <>\n              {totalmarks.length ? (\n                <>\n                  <p className=\"showmarks-heading\">Showing all test marks</p>\n                  <table className=\"showmarks-table\">\n                    <tr className=\"showmarks-table-th\">\n                      <th>So.No</th>\n                      <th>Quizset Name</th>\n                      <th>Total Mark</th>\n                      <th>Marks secured</th>\n                      <th>Appeared on</th>\n                    </tr>\n                    {totalmarks &&\n                      totalmarks.map((marks, index) => (\n                        <tr>\n                          <td className=\"showmarks-table-td\">{index + 1}</td>\n                          <td className=\"showmarks-table-td\">\n                            {marks.quizsetName}\n                          </td>\n                          <td className=\"showmarks-table-td\">\n                            {marks.totalmark}\n                          </td>\n                          <td className=\"showmarks-table-td\">{marks.mark}</td>\n\n                          <td className=\"showmarks-table-td\">\n                            {' '}\n                            {new Intl.DateTimeFormat('en-GB', {\n                              hour: '2-digit',\n                              minute: '2-digit',\n                              month: '2-digit',\n                              day: '2-digit',\n                              year: 'numeric'\n                            }).format(new Date(marks.createdAt))}\n                          </td>\n                        </tr>\n                      ))}\n                  </table>\n                </>\n              ) : (\n                <p className=\"showmarks-heading\">No quiz test appeared</p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.user.isLoading, totalmarks: store.user.marks };\n}\n\nexport default connect(mapStateToProps)(Showmarks);\n","import React from 'react';\nimport '../stylesheet/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Hero from './Hero';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Notfound from './Notfound';\nimport Home from './Home';\nimport Showquiz from './Showquiz';\nimport Showmarks from './Showmarks';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      islogged: false\n    };\n  }\n\n  handleIslogged = value => {\n    this.setState({ islogged: value });\n  };\n  PublicRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/users\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Hero />\n          </Route>\n          <Route exact path=\"/users/signup\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signup />\n          </Route>\n          <Route exact path=\"/users/signin\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signin handleIslogged={this.handleIslogged} />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n  PrivateRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/users/:username\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Home />\n          </Route>\n          <Route exact path=\"/users/:username/marks\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showmarks />\n          </Route>\n          <Route exact path=\"/users/:username/quizsets/:quizname/:id\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showquiz />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {localStorage.quizuserToken\n          ? this.PrivateRoutes()\n          : this.PublicRoutes()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  handleLogout = () => {\n    localStorage.removeItem('quizAdminToken');\n    localStorage.removeItem('quizAdminName');\n    this.props.handleIslogged(false);\n  };\n\n  PrivateNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to={`/admins/${localStorage.quizAdminName}`}>\n          Quiz\n        </NavLink>\n        <div>\n          <NavLink\n            className=\"nav-item\"\n            to={`/admins/${localStorage.quizAdminName}/quizsets/create`}\n          >\n            Create a Quizset\n          </NavLink>\n          <NavLink\n            onClick={this.handleLogout}\n            className=\"nav-item nav-item-btn\"\n            to=\"/\"\n          >\n            LOGOUT\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  PublicNav = () => {\n    return (\n      <>\n        <NavLink className=\"logo\" to=\"/admins\">\n          ADMIN\n        </NavLink>\n        <div>\n          <NavLink className=\"nav-item\" to=\"/admins/signin\">\n            SIGN IN\n          </NavLink>\n          <NavLink className=\"nav-item nav-item-btn\" to=\"/admins/signup\">\n            SIGN UP\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        <div className=\"header-wrapper\">\n          <nav className=\"header-nav\">\n            {localStorage.quizAdminToken ? this.PrivateNav() : this.PublicNav()}\n          </nav>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Hero extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">\n              Create a quizset so that your users can appear for exam\n            </p>\n            <NavLink className=\"hero-btn nav-item-btn\" to=\"/admins/signin\">\n              Get Started\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper rfooter-wrapper\">\n            <div className=\"rfooter-wrapper-items\">\n              <NavLink className=\"footer-items rfooter-items\" to=\"/\">\n                ABOUT ME\n              </NavLink>\n              <NavLink className=\"footer-items rfooter-items\" to=\"/\">\n                HELP\n              </NavLink>\n            </div>\n            <small className=\"footer-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Hero;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport validator from 'validator';\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      adminName: '',\n      adminEmail: '',\n      adminPassword: '',\n      adminPicture: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (validator.isEmail(this.state.adminEmail)) {\n      fetch('/api/v1/admins/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminName: this.state.adminName,\n          adminEmail: this.state.adminEmail,\n          adminPassword: this.state.adminPassword,\n          adminPicture: this.state.adminPicture\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            alert('successfully registered');\n            this.props.history.push('/admins/signin');\n          } else {\n            alert('enter valid details');\n          }\n        });\n    } else {\n      alert('enter a valid details');\n    }\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Choose a admin name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"adminName\"\n              placeholder=\"e.g: prasanth\"\n              value={this.state.adminName}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"adminEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.adminEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"adminPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.adminPassword}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Add online url of profile picture\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"adminPicture\"\n              placeholder=\"e.g: www.myprofilepic.com/picprasanth\"\n              value={this.state.adminPicture}\n              onChange={this.handleChange}\n            />\n\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN UP\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Already have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signin\">\n                Sign in\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport validator from 'validator';\n\nclass Signin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      adminEmail: '',\n      adminPassword: ''\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (validator.isEmail(this.state.adminEmail)) {\n      fetch('/api/v1/admins/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminEmail: this.state.adminEmail,\n          adminPassword: this.state.adminPassword\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.email) {\n            alert(data.message);\n          } else if (!data.success) {\n            alert(data.message);\n          } else if (data.success) {\n            alert('successfully loggedin');\n            localStorage.setItem('quizAdminToken', data.token);\n            localStorage.setItem('quizAdminName', data.adminName);\n            this.props.handleIslogged(true);\n            this.props.history.push(`/admins/${localStorage.quizAdminName}`);\n          }\n        });\n    } else {\n      alert('enter valid details');\n    }\n  };\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Enter a valid email address\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"email\"\n              name=\"adminEmail\"\n              placeholder=\"example@gmail.com\"\n              value={this.state.adminEmail}\n              onChange={this.handleChange}\n            />\n            <label className=\"sign-label\" htmlFor=\"\">\n              Password\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"password\"\n              name=\"adminPassword\"\n              placeholder=\"e.g: 123@qwerty\"\n              value={this.state.adminPassword}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"SIGN IN\"\n              onClick={this.handleSubmit}\n            />\n            <div className=\"sign-footer\">\n              <p className=\"sign-footer-text\">Don't have an account?</p>\n              <NavLink className=\"sign-footer-link\" to=\"/admins/signup\">\n                Sign up\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React from 'react';\n\nclass Notfound extends React.Component {\n  render() {\n    return (\n      <>\n        {/* <img src=\"notfound.png\" alt=\"\" /> */}\n        {/* <p>not found</p> */}\n      </>\n    );\n  }\n}\n\nexport default Notfound;\n","import { GET_ADMIN, GET_QUIZSET } from '../types';\n\nexport function getAdmin(payload) {\n  return { type: GET_ADMIN, payload };\n}\n\nexport function fetchAdmin() {\n  return dispatch => {\n    fetch('/api/v1/admin', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getAdmin(data.admin));\n      });\n  };\n}\n\nexport function getQuizset(payload) {\n  return {\n    type: GET_QUIZSET,\n    payload\n  };\n}\n\nexport function fetchQuizset(quizsetId) {\n  return dispatch => {\n    fetch(`/api/v1/quizsets/${quizsetId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        dispatch(getQuizset(data.quizset));\n      });\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAdmin } from '../../state/actions/admin.actions';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    let { isLoading, admin } = this.props;\n    return (\n      <div className=\"profile-section\">\n        <center>\n          {isLoading ? (\n            <p className=\"loader rloader\"></p>\n          ) : (\n            <>\n              <img className=\"profile-pic\" src={admin.adminPicture} alt=\"\" />\n              <p className=\"profile-name\">{admin.adminName}</p>\n            </>\n          )}\n        </center>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.admin.isLoading, admin: store.admin.adminDetails };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAdmin } from '../../state/actions/admin.actions';\nclass Quizsets extends React.Component {\n  constructor() {\n    super();\n  }\n\n  handleDelete = id => {\n    fetch(`/api/v1/quizsets/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          alert('deleted successfully');\n          this.props.dispatch(fetchAdmin());\n        }\n      });\n  };\n  render() {\n    let { isLoading, quizsets } = this.props;\n    return (\n      <>\n        <div className=\"quizsets-list-wrapper rquizsets-list-wrapper\">\n          {isLoading ? (\n            <p className=\"loader rloader\"></p>\n          ) : (\n            <div className=\"quizsets-list rquizsets-list\">\n              {quizsets.length ? (\n                quizsets &&\n                quizsets.map(quizset => (\n                  <div className=\"quizset-btn-wrapper\">\n                    <NavLink\n                      className=\"quizset-btn-text\"\n                      to={`/admins/${localStorage.quizAdminName}/quizsets/${quizset.quizsetName}/${quizset._id}`}\n                    >\n                      {quizset.quizsetName}\n                    </NavLink>\n                    <p\n                      onClick={() => this.handleDelete(quizset._id)}\n                      className=\"question-btn-no\"\n                    >\n                      ❌\n                    </p>\n                    <NavLink\n                      to={`/admins/${localStorage.quizAdminName}/quizsets/${quizset.quizsetName}/${quizset._id}/edit/`}\n                      className=\"question-btn-no\"\n                    >\n                      ✏️\n                    </NavLink>\n                  </div>\n                ))\n              ) : (\n                <p className=\"quizlist-heading\">\n                  No quizsets found, create a quizsets\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.admin.isLoading, quizsets: store.admin.quizsets };\n}\n\nexport default connect(mapStateToProps)(Quizsets);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { fetchAdmin } from '../../state/actions/admin.actions';\nimport Profile from './Profile';\nimport Quizsets from './Quizsets';\nimport { connect } from 'react-redux';\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchAdmin());\n  }\n  render() {\n    let { isLoading } = this.props;\n\n    return (\n      <div className=\"home-section\">\n        {isLoading ? (\n          <p className=\"loader rloader\"></p>\n        ) : (\n          <div className=\"home-wrapper rhome-wrapper\">\n            <Profile />\n            <Quizsets />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.admin.isLoading };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { withRouter, NavLink } from 'react-router-dom';\nimport { fetchQuizset } from '../../state/actions/admin.actions';\nimport { connect } from 'react-redux';\nclass Showquiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n      quizname: '',\n      filterqns: []\n    };\n  }\n\n  handleQuestions = () => {\n    this.props.dispatch(fetchQuizset(this.props.match.params.id));\n  };\n  componentDidMount() {\n    this.handleQuestions();\n  }\n\n  handleDelete = id => {\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ show: true });\n          this.handleQuestions();\n        }\n      });\n  };\n\n  render() {\n    let { isLoading, quizset } = this.props;\n\n    return (\n      <div className=\"quizlist-section\">\n        {isLoading ? (\n          <p className=\"loader rloader\"></p>\n        ) : (\n          quizset && (\n            <>\n              <div className=\"quizlist-header\">\n                <p className=\"quizlist-quizsetname\">{quizset.quizsetName}</p>\n                <NavLink\n                  className=\"addquestion\"\n                  to={`/admins/${localStorage.quizAdminName}/quizsets/${quizset.quizsetName}/${quizset._id}/addquestion`}\n                >\n                  Add a question\n                </NavLink>\n              </div>\n              <div className=\"quizlist-card-wrapper\">\n                {quizset.questionsId.length ? (\n                  <>\n                    {quizset.questionsId.map((question, index) => (\n                      <div className=\"quiz-card\">\n                        <div>\n                          <p className=\"question-no\">{index + 1}.</p>\n                          <p\n                            onClick={() => this.handleDelete(question._id)}\n                            className=\"question-no\"\n                          >\n                            ❌\n                          </p>\n                          <NavLink\n                            to={`/admins/${localStorage.quizAdminName}/quizsets/${quizset.quizsetName}/${question.title}/${question._id}/edit/`}\n                            className=\"question-no\"\n                          >\n                            ✏️\n                          </NavLink>\n                        </div>\n                        <div className=\"question-card\">\n                          <p className=\"question-title\">{question.title}</p>\n                          <div className=\"quizlist-card-wrapper\">\n                            <button className=\"question-answers-item rquestion-answers-item\">\n                              {question.option1}\n                            </button>\n                            <button className=\"question-answers-item rquestion-answers-item\">\n                              {question.option2}\n                            </button>\n                            <button className=\"question-answers-item rquestion-answers-item\">\n                              {question.option3}\n                            </button>\n                            <button className=\"question-answers-item rquestion-answers-item\">\n                              {question.option4}\n                            </button>\n                            <button className=\"question-answers-item rquestion-answers-item correct-answer\">\n                              {question.answer}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                ) : (\n                  <p className=\"quizlist-quizsetname\">\n                    No questions found, add a new question\n                  </p>\n                )}\n              </div>\n            </>\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return { isLoading: store.admin.isLoading, quizset: store.admin.quizset };\n}\n\nexport default connect(mapStateToProps)(withRouter(Showquiz));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass EditQuestion extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      answer: '',\n      quizset: ''\n    };\n  }\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({\n            title: data.question.title,\n            option1: data.question.option1,\n            option2: data.question.option2,\n            option3: data.question.option3,\n            option4: data.question.option4,\n            answer: data.question.answer,\n            quizset: data.question.quizset\n          });\n        }\n      });\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let id = this.props.match.params.id;\n    let quizname = this.props.match.params.quizname;\n\n    fetch(`/api/v1/questions/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        option1: this.state.option1,\n        option2: this.state.option2,\n        option3: this.state.option3,\n        option4: this.state.option4,\n        answer: this.state.answer\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          alert('successfully updated');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Question title\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"e.g: who is the founder of oyo rooms?\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n            {/* // options // */}\n            <div className=\"create-options\">\n              <label className=\"sign-label\" htmlFor=\"\">\n                Options\n              </label>\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option1\"\n                placeholder=\"Jef Bezos\"\n                value={this.state.option1}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option2\"\n                placeholder=\"Ritesh Agarwal\"\n                value={this.state.option2}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option3\"\n                placeholder=\"Varun Agarwal\"\n                value={this.state.option3}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option4\"\n                placeholder=\"Rakesh Chahar\"\n                value={this.state.option4}\n                onChange={this.handleChange}\n              />\n            </div>\n            {/* // options // */}\n\n            <label className=\"sign-label\" htmlFor=\"\">\n              Correct answer\n            </label>\n            <select\n              name=\"answer\"\n              className=\"sign-select\"\n              value={this.state.answer}\n              onChange={this.handleChange}\n            >\n              <option value={this.state.option1}>{this.state.option1}</option>\n              <option value={this.state.option2}>{this.state.option2}</option>\n              <option value={this.state.option3}>{this.state.option3}</option>\n              <option value={this.state.option4}>{this.state.option4}</option>\n            </select>\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <p className=\"sign-quizsetname\">\n              {this.props.match.params.quizname}\n            </p>\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditQuestion);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass CreateQuizset extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quizsetName: ''\n    };\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.quizsetName) {\n      fetch('/api/v1/quizsets/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.quizAdminToken\n        },\n        body: JSON.stringify({\n          quizsetName: this.state.quizsetName\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            this.props.history.push(`/admins/${localStorage.quizAdminName}`);\n          } else {\n            alert(`${data.message}`);\n          }\n        });\n    } else {\n      alert('fill all the details');\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"quizsetName\"\n              placeholder=\"e.g: cricket, bollywood\"\n              value={this.state.quizsetName}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateQuizset);\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { fetchQuizset } from '../../state/actions/admin.actions';\nimport { connect } from 'react-redux';\n\nclass EditQuizset extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      quizsetName: ''\n    };\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  componentDidMount() {\n    fetch(`/api/v1/quizsets/${this.props.match.params.id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          this.setState({ quizsetName: data.quizset.quizsetName });\n        }\n      });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.quizsetName) {\n      fetch(`/api/v1/quizsets/${this.props.match.params.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.quizAdminToken\n        },\n        body: JSON.stringify({\n          quizsetName: this.state.quizsetName\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            this.props.history.push(`/admins/${localStorage.quizAdminName}`);\n          } else {\n            alert(`${data.message}`);\n          }\n        });\n    } else {\n      alert('fill all the details');\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"quizsetName\"\n              placeholder=\"e.g: cricket, bollywood\"\n              value={this.state.quizsetName}\n              onChange={this.handleChange}\n            />\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(withRouter(EditQuizset));\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass AddQuestion extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      option1: '',\n      option2: '',\n      option3: '',\n      option4: '',\n      answer: '',\n      quizset: ''\n    };\n  }\n\n  handleChange = event => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(`/api/v1/quizsets/${this.props.match.params.id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: localStorage.quizAdminToken\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        option1: this.state.option1,\n        option2: this.state.option2,\n        option3: this.state.option3,\n        option4: this.state.option4,\n        answer: this.state.answer\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          alert('successfully published');\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-wrapper rsign-wrapper\">\n        <div className=\"sign-section\">\n          <form className=\"sign-form\">\n            <label className=\"sign-label\" htmlFor=\"\">\n              Question title\n            </label>\n            <input\n              className=\"sign-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"e.g: who is the founder of oyo rooms?\"\n              value={this.state.title}\n              onChange={this.handleChange}\n            />\n            {/* // options // */}\n            <div className=\"create-options\">\n              <label className=\"sign-label\" htmlFor=\"\">\n                Options\n              </label>\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option1\"\n                placeholder=\"Jef Bezos\"\n                value={this.state.option1}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option2\"\n                placeholder=\"Ritesh Agarwal\"\n                value={this.state.option2}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option3\"\n                placeholder=\"Varun Agarwal\"\n                value={this.state.option3}\n                onChange={this.handleChange}\n              />\n              <input\n                className=\"sign-input\"\n                type=\"text\"\n                name=\"option4\"\n                placeholder=\"Rakesh Chahar\"\n                value={this.state.option4}\n                onChange={this.handleChange}\n              />\n            </div>\n            {/* // options // */}\n\n            <label className=\"sign-label\" htmlFor=\"\">\n              Correct answer\n            </label>\n            <select\n              name=\"answer\"\n              className=\"sign-select\"\n              value={this.state.answer}\n              onChange={this.handleChange}\n            >\n              <option value={this.state.option1}>{this.state.option1}</option>\n              <option value={this.state.option2}>{this.state.option2}</option>\n              <option value={this.state.option3}>{this.state.option3}</option>\n              <option value={this.state.option4}>{this.state.option4}</option>\n            </select>\n            <label className=\"sign-label\" htmlFor=\"\">\n              Quizset Name\n            </label>\n            <p className=\"sign-quizsetname\">\n              {this.props.match.params.quizname}\n            </p>\n            <input\n              className=\"sign-btn nav-item-btn\"\n              type=\"submit\"\n              value=\"PUBLISH\"\n              onClick={this.handleSubmit}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AddQuestion);\n","import React from 'react';\nimport '../stylesheet/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Hero from './Hero';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Notfound from './Notfound';\nimport Home from './Home';\nimport Showquiz from './Showquiz';\nimport EditQuestion from './EditQuestion';\nimport CreateQuizset from './CreateQuizset';\nimport EditQuizset from './EditQuizset';\nimport AddQuestion from './AddQuestion';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      islogged: false\n    };\n  }\n\n  handleIslogged = value => {\n    this.setState({ islogged: value });\n  };\n  PublicRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/admins\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Hero />\n          </Route>\n          <Route exact path=\"/admins/signup\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signup />\n          </Route>\n          <Route exact path=\"/admins/signin\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Signin handleIslogged={this.handleIslogged} />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n  PrivateRoutes() {\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/admins/:adminname\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Home />\n          </Route>\n          <Route exact path=\"/admins/:adminname/quizsets/create\">\n            <Header handleIslogged={this.handleIslogged} />\n            <CreateQuizset />\n          </Route>\n          <Route exact path=\"/admins/:adminname/quizsets/:quizname/:id/edit\">\n            <Header handleIslogged={this.handleIslogged} />\n            <EditQuizset />\n          </Route>\n          <Route exact path=\"/admins/:adminname/quizsets/:quizname/:id\">\n            <Header handleIslogged={this.handleIslogged} />\n            <Showquiz />\n          </Route>\n          <Route\n            exact\n            path=\"/admins/:adminname/quizsets/:quizname/:id/addquestion\"\n          >\n            <Header handleIslogged={this.handleIslogged} />\n            <AddQuestion />\n          </Route>\n          <Route\n            exact\n            path=\"/admins/:adminname/quizsets/:quizname/:title/:id/edit\"\n          >\n            <Header handleIslogged={this.handleIslogged} />\n            <EditQuestion />\n          </Route>\n          <Route exact>\n            <Notfound />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {localStorage.quizAdminToken\n          ? this.PrivateRoutes()\n          : this.PublicRoutes()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LandingPage extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"hero-section\">\n          <center className=\"hero-wrapper\">\n            <p className=\"hero-text\">Welcome to Quiz</p>\n\n            <NavLink\n              className=\"hero-btn nav-item-btn rhero-btn\"\n              to={\n                localStorage.quizAdminToken\n                  ? `/admins/${localStorage.quizAdminName}`\n                  : '/admins'\n              }\n            >\n              Get Started As Admin\n            </NavLink>\n            <NavLink\n              className=\"hero-btn nav-item-btn landing-page-btn  rhero-btn\"\n              to={\n                localStorage.quizuserToken\n                  ? `/users/${localStorage.quizuserName}`\n                  : '/users'\n              }\n            >\n              Get Started As User\n            </NavLink>\n          </center>\n        </div>\n        <div className=\"footer-section\">\n          <div className=\"footer-wrapper rfooter-wrapper\">\n            <div className=\"rfooter-wrapper-items\">\n              <a\n                className=\"footer-items rfooter-items\"\n                href=\"https://github.com/chaduvulaprasanth\"\n                target=\"_blank\"\n              >\n                ABOUT ME\n              </a>\n              <a\n                className=\"footer-items rfooter-items\"\n                href=\"https://twitter.com/chaduvula98\"\n                target=\"_blank\"\n              >\n                HELP\n              </a>\n            </div>\n            <small className=\"footer-copy rfooter-copy\">\n              © 2020 Quiz from Chaduvula Prasanth\n            </small>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LandingPage;\n","import { GET_QUESTIONS, GET_ADMIN, GET_QUIZSET } from '../types';\n\nlet intialState = {\n  isLoading: true,\n  adminDetails: '',\n  quizsets: [],\n  quizset: ''\n};\n\nexport default function admin(state = intialState, action) {\n  switch (action.type) {\n    case GET_ADMIN:\n      return {\n        ...state,\n        isLoading: false,\n        adminDetails: action.payload,\n        quizsets: action.payload.quizsetsId\n      };\n    case GET_QUIZSET:\n      return {\n        ...state,\n        isLoading: false,\n        quizset: action.payload\n      };\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload\n      };\n    default:\n      return { ...state };\n  }\n}\n","import {\n  SHOW_USER,\n  GET_QUESTIONS,\n  GET_ALLQUIZSETS,\n  GET_QUIZSET\n} from '../types';\n\nlet intialState = {\n  isLoading: true,\n  userDetails: '',\n  quizsets: [],\n  marks: '',\n  questions: ''\n};\n\nexport default function user(state = intialState, action) {\n  switch (action.type) {\n    case SHOW_USER:\n      return {\n        ...state,\n        isLoading: false,\n        userDetails: action.payload,\n        marks: action.payload.marksId.reverse()\n      };\n    case GET_ALLQUIZSETS:\n      return {\n        ...state,\n        isLoading: false,\n        quizsets: action.payload\n      };\n    case GET_QUIZSET:\n      return {\n        ...state,\n        isLoading: false,\n        questions: action.payload\n      };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport admin from './admin.reducer';\nimport user from './user.reducer';\n\nexport default combineReducers({ admin, user });\n","import { createStore, applyMiddleware } from 'redux';\nimport admin from './reducers/admin.reducer';\nimport reducer from './reducers/index';\nlet createthunk = store => next => action => {\n  if (typeof action === 'function') {\n    return action(store.dispatch);\n  }\n\n  return next(action);\n};\n\nconst store = createStore(reducer, applyMiddleware(createthunk));\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport User from './user/views/App';\nimport Admin from './admin/views/App';\nimport LandingPage from './LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nfunction App() {\n  return (\n    <>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n    </>\n  );\n}\n\nrender(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n      <Admin />\n      <User />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}